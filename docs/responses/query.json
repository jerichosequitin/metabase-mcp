{
  "command_type": "execute",
  "description": "Unified execution command supporting both SQL queries and card execution with response optimization",
  "execution_modes": {
    "sql_mode": {
      "description": "Execute custom SQL queries against Metabase databases",
      "required_params": ["database_id", "query"],
      "optional_params": ["native_parameters", "row_limit"]
    },
    "card_mode": {
      "description": "Execute saved cards/questions with optional parameters",
      "required_params": ["card_id"],
      "optional_params": ["card_parameters", "row_limit"]
    }
  },
  "response_optimizations": {
    "sql_mode": {
      "raw_response_issues": [
        "Massive metadata objects (results_metadata, insights)",
        "Fingerprint data with statistics not needed for execution",
        "Caching information and internal query details",
        "Complex type definitions and semantic information",
        "Average execution time, status, context data"
      ],
      "optimization_strategy": "Convert rows+cols format to card-style numbered objects, eliminating column metadata entirely",
      "kept_fields": [
        "numbered object entries (0, 1, 2...) with field names as keys",
        "row_count - number of rows returned",
        "native_form.query - executed SQL query for reference"
      ],
      "removed_fields": [
        "results_metadata - heavy array with detailed field analysis",
        "insights - ML-generated insights not needed",
        "fingerprint - statistical analysis data", 
        "results_timezone, requested_timezone - timezone info",
        "format-rows, cached, database_id, started_at",
        "json_query.middleware - internal query processing",
        "average_execution_time, status, context, running_time",
        "cols - entire column metadata array eliminated",
        "rows - array format replaced with numbered objects"
      ],
      "format_transformation": {
        "description": "SQL responses now use same card-style format - rows+cols converted to numbered objects",
        "before_format": {
          "rows": [[9458014662, "314 Studios"], [9458014663, "Another Studio"]],
          "cols": [
            {"name": "id", "base_type": "type/BigInteger", "database_type": "BIGINT"},
            {"name": "name", "base_type": "type/Text", "database_type": "VARCHAR"}
          ]
        },
        "after_format": {
          "0": {"id": 9458014662, "name": "314 Studios"},
          "1": {"id": 9458014663, "name": "Another Studio"}
        },
        "benefits": [
          "Eliminates all column metadata overhead",
          "Direct field access without column lookup",
          "Self-documenting structure",
          "Consistent with card execution format"
        ]
      },
      "token_analysis": {
        "estimated_raw_size": "~25,000-35,000 characters for 5 rows",
        "optimized_size": "~800-1,200 characters for 5 rows", 
        "estimated_savings": "~95-97% reduction",
        "scaling": "Maximum efficiency for typical small result sets (1-10 rows)",
        "format_transformation_impact": "Eliminates 100% of column metadata overhead, providing massive token savings"
      }
    },
    "card_mode": {
      "raw_response_format": "Numbered keys format: {'0': {data}, '1': {data}, 'data': {'rows': []}}",
      "optimization_strategy": "Apply client-side row limiting to numbered entries",
      "row_limiting": {
        "detection": "Use regex /^\\d+$/ to find numbered keys",
        "application": "Remove numbered entries beyond row_limit",
        "reporting": "Return both original_row_count and final row_count"
      },
      "kept_structure": [
        "All numbered entries within row limit",
        "data object with metadata",
        "Complete card response structure"
      ],
      "token_analysis": {
        "raw_response": "Variable based on card query complexity",
        "optimization": "Row limiting reduces response size proportionally",
        "benefit": "Prevents overwhelming responses for large datasets"
      }
    }
  },
  "raw_sql_response_structure": {
    "data": {
      "rows": "array - actual query results",
      "cols": "array - column definitions with types and metadata",
      "native_form": {
        "params": "query parameters used",
        "query": "actual SQL executed"
      },
      "results_timezone": "string - server timezone",
      "requested_timezone": "string - client timezone", 
      "format-rows?": "boolean - row formatting flag",
      "results_metadata": {
        "columns": "array - heavy metadata per column with fingerprints"
      },
      "insights": "array|null - ML insights"
    },
    "cached": "boolean|null - cache status",
    "database_id": "number - database identifier", 
    "started_at": "string - execution start time",
    "json_query": {
      "type": "string - query type",
      "native": "object - native query details",
      "database": "number - database id",
      "middleware": "object - query processing flags"
    },
    "average_execution_time": "number|null - historical average",
    "status": "string - execution status",
    "context": "string - execution context",
    "row_count": "number - rows returned",
    "running_time": "number - execution time in ms"
  },
  "optimized_sql_response_structure": {
    "0": "object - first result record with field names as keys",
    "1": "object - second result record with field names as keys",
    "...": "object - additional numbered records",
    "row_count": "number - rows returned"
  },
  "raw_card_response_structure": {
    "0": "object - first result record",
    "1": "object - second result record", 
    "...": "object - additional numbered records",
    "data": {
      "rows": "array - usually empty in card responses"
    }
  },
  "usage_examples": {
    "sql_execution": {
      "input": {
        "database_id": 3,
        "query": "SELECT * FROM users LIMIT 5",
        "row_limit": 5
      },
      "output_size": "~2,500 characters (vs ~30,000 raw)"
    },
    "card_execution": {
      "input": {
        "card_id": 123,
        "row_limit": 10
      },
      "behavior": "Returns first 10 numbered entries, removes entries 10+"
    }
  },
  "implementation_notes": [
    "SQL mode applies LIMIT clause to query before execution when possible",
    "Card mode applies row limiting client-side after API response", 
    "Both modes now use identical numbered object response format",
    "SQL responses converted from rows+cols arrays to numbered objects eliminating all column metadata",
    "Unified response format provides consistent API regardless of execution mode",
    "Maximum token efficiency achieved for typical small result sets"
  ],
  "optimization_benefits": [
    "Massive token reduction for AI agent processing (~95-97% savings)",
    "Unified response format across both SQL and Card execution modes",
    "Eliminates all column metadata overhead completely",
    "Direct field access without array indexing or column lookups",
    "Self-documenting structure with field names embedded",
    "Faster response parsing and handling",
    "Reduced bandwidth usage",
    "Maintained data integrity and usability"
  ]
}