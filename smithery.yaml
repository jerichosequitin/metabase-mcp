# Smithery configuration file: https://smithery.ai/docs/config#smitheryyaml

startCommand:
  type: stdio
  configSchema:
    # JSON Schema defining the configuration options for the MCP.
    type: object
    required:
      - metabaseUrl
    properties:
      metabaseUrl:
        type: string
        description: URL of the Metabase instance (e.g. https://your-metabase-instance.com)
      metabaseUserEmail:
        type: string
        description: Email address for authenticating with Metabase (required if not using API key)
      metabasePassword:
        type: string
        description: Password for authenticating with Metabase (required if not using API key)
      metabaseApiKey:
        type: string
        description: API Key for authenticating with Metabase (alternative to email/password)
    oneOf:
      - required: ["metabaseUrl", "metabaseApiKey"]
      - required: ["metabaseUrl", "metabaseUserEmail", "metabasePassword"]
  commandFunction:
    # A JS function that produces the CLI command based on the given config to start the MCP on stdio.
    |-
    (config) => {
      const env = {
        METABASE_URL: config.metabaseUrl
      };

      // Check which authentication method to use
      if (config.metabaseApiKey) {
        env.METABASE_API_KEY = config.metabaseApiKey;
      } else {
        env.METABASE_USER_EMAIL = config.metabaseUserEmail;
        env.METABASE_PASSWORD = config.metabasePassword;
      }

      return {
        command: 'node',
        args: ['build/src/index.js'],
        env
      };
    }
  exampleConfig:
    metabaseUrl: https://example-metabase.com
    metabaseUserEmail: user@example.com
    metabasePassword: example_password
    # Or you can use API key authentication:
    # metabaseUrl: https://example-metabase.com
    # metabaseApiKey: example_api_key

description: |
  Connect AI assistants to your Metabase analytics platform. Access dashboards, execute queries, and retrieve data seamlessly through conversational interfaces. Enhance your analytics experience with structured data access and robust error handling.

  Supports two authentication methods:
  1. API Key Authentication (Recommended): Simply provide your `metabaseApiKey` along with `metabaseUrl` for secure access.
  2. Username/Password Authentication: Use your Metabase credentials by providing `metabaseUserEmail` and `metabasePassword` along with `metabaseUrl`.
